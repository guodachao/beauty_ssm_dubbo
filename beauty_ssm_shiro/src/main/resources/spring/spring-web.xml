<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--扫描web相关的controller-->
    <context:component-scan base-package="com.yingjun.ssm.web"/>

    <!--简化配置:
    	1、自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter
    	2、提供一系列:数据绑定,数字和日期的format,@NumberFormat,@DataTimeFormat,xml,json默认读写支持
    -->
    <mvc:annotation-driven/>

    <!-- 对于静态资源，使用Web应用服务器默认的default servlet处理-->
    <!-- 将静态资源的处理经由Spring MVC框架交回Web应用服务器处理 -->
    <!-- 资源文件必须在WEB-INF下 -->
    <!--<mvc:default-servlet-handler/>-->

    <!-- 静态资源映射 spring3.0.4+ -->
    <!-- 由Spring MVC框架自己处理静态资源，并添加一些有用的附加值功能，例如cache-period进行浏览器缓存 （每次检查请求头Last-Modified，当资源文件未发生变换，直接返回缓存文件） -->
    <!-- 任意指定资源文件路径，甚至打包的jar -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

    <!--配置JSP　显示ViewResolver-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- bind your xxMessages.properties -->
    <bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
        <property name="basename" value="ValidationMessages"/>
    </bean>

    <!--全局异常捕捉 -->
    <bean class="com.yingjun.ssm.exception.GlobalExceptionResolver"/>
</beans>